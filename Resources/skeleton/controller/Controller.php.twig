<?php

namespace {{ namespace }}\Controller;

{% block use_statements %}
use Symfony\Component\HttpFoundation\Request;
{% if 'annotation' == format.routing -%}
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
{% endif %}

use LeniM\ApiGenericBundle\Controller\CrudAbstract;
use LeniM\ApiGenericBundle\Controller\GenericApiTrait;
{% if entityInfos.enableDocumentation %}
use Nelmio\ApiDocBundle\Annotation\ApiDoc;
{% endif %}
{% endblock use_statements %}

{% block class_definition %}
class {{ controller }}Controller extends CrudAbstract
{% endblock class_definition %}
{
{% block class_body %}
    const repository = '{{ bundle }}:{{ entityInfos.repository }}';
    const entity     = '{{ entityInfos.entity }}';
    const formType   = '{{ entityInfos.form }}';

    public $view = null;

    use GenericApiTrait;

{% for action in actions %}
    /**
    {% if 'annotation' == format.routing -%}
     * @Route("{{ action.route }}")
    {% endif -%}
    {%- if action.description is defined %}
     *
     * {{action.description}}
{% endif -%}
    {%- if action.nelmio is defined %}
     *
     * @ApiDoc(
     *  resource={{ action.nelmio.resource is defined ? action.nelmio.resource : true}},
{% if action.nelmio.description is defined %}
     *  description="{{action.nelmio.description}}",
{% endif -%}
{%- if action.nelmio.output is defined %}
     *  output="{{action.nelmio.output}}'",
{% endif -%}
{%- if action.nelmio.input is defined %}
     *  input="{{action.nelmio.input}}'",
{% endif -%}
{%- if action.nelmio.requirements is defined %}
     *  requirements={
{% for item in action.nelmio.requirements %}
     *      { "name"="{{item.columnNames}}", "dataType"="{{item.dataType}}", "requirement"="{% if item.dataType == 'integer' %}\d+{%- else -%}.*{% endif %}", "description"="{{item.description is defined ? item.description : item.name}}" },
{% endfor %}
     *  },
{% endif %}
{% if action.nelmio.parameters is defined %}
     *  parameters={
{% for item in action.nelmio.parameters %}
     *      { "name"="{{item.columnNames}}", "dataType"="{{item.dataType}}", "required"="{{ item.required is defined and item.dataType == 1 ? 'true,' : 'false' }}", "description"="{{item.description is defined ? item.description : item.name}}" },
{% endfor %}
     *  },
{% endif %}
{% if action.nelmio.filters is defined %}
     *  filters={
{% for item in action.nelmio.filters %}
     *      { "name"="{{item.columnNames}}", "dataType"="{{item.dataType}}", "required"="{{ item.required is defined and item.dataType == 1 ? 'true,' : 'false' }}", "description"="{{item.description is defined ? item.description : item.name}}" },
{% endfor %}
     *  },
{% endif %}
     * )
{% endif %}
     */
    public function {{ action.name }}(
        {%- if action.placeholders|length > 0 -%}
            Request ${{- action.placeholders|join(', $') -}}
        {%- endif -%})
    {
        parent::{{action.parent}}(
            {%- if action.placeholders|length > 0 -%}
                ${{- action.placeholders|join(', $') -}}
            {%- endif -%});
        $this->view->setTemplate("SWSMApiBundle:Generic:data.html.twig");
        return $this->handleView($this->view);
    }

{% endfor -%}
{% endblock class_body %}
}
